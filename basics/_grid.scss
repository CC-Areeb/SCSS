@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);


// to make some justify classes, we will use a list instead of map
$layout-values: flex-start, flex-end, center, space-between, space-around;



// base layout classes

.container
{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}


.row
{
    display: flex;
    flex-flow: row wrap;
}


// grid gaps
@each $key, $val in $grid-gaps {
    .gap-#{$key} > *
    {
        padding: $val;
    }

    .gap-#{$key}
    {
        margin-left: -$val;
        margin-right: -$val;
    }
}


// justify content classes
@each $val in $layout-values {
    .justify-#{$val}
    {
        justify-content: $val;
    }
}



// column classes
@include xs
{
    @for $index from 1 through $grid-columns
    {
        .col-#{$index}-xs
        {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}


@include sm
{
    @for $index from 1 through $grid-columns
    {
        .col-#{$index}-sm
        {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}


@include md
{
    @for $index from 1 through $grid-columns
    {
        .col-#{$index}-md
        {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}


@include lg
{
    @for $index from 1 through $grid-columns
    {
        .col-#{$index}-lg
        {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}


@include xl
{
    @for $index from 1 through $grid-columns
    {
        .col-#{$index}-xl
        {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}